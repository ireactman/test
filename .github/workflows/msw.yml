name: Update mockServiceWorker.js

on:
  pull_request:
    types:
      # - opened
      - synchronize # maybe don't need
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

env:
  GIT_AUTHOR_NAME: ${{ github.actor }}
  GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
  GIT_COMMITTER_NAME: GitHub
  GIT_COMMITTER_EMAIL: actions@github.com
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

jobs:
  update_msw_worker:
    runs-on: ubuntu-latest

    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
      - uses: actions/checkout@v4
      - name: Set up node
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install node_modules
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          npm ci
      - name: Regenerate mockServiceWorker.js
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          echo "Current branch is: $(git rev-parse --abbrev-ref HEAD)"
          git config pull.rebase false      
          git pull origin $BRANCH_NAME --allow-unrelated-histories
          git checkout $BRANCH_NAME
          npx msw init public/ --save
      - name: Check for changes in mockServiceWorker.js
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          if [[ $(git status --porcelain) ]]; then
            git status --porcelain
            git add public/mockServiceWorker.js
            git commit -m "[dependabot skip] Automatically updating mockServiceWorker.js file after 'msw' update in package.json"
            git push origin $BRANCH_NAME
          else
            echo "No changes in mockServiceWorker.js"
          fi
