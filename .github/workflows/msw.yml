name: msw

on:  
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "public/mockServiceWorker.js"
    # branches:
    #   - master

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}
  GIT_AUTHOR_NAME: ${{ github.actor }}
  GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
  GIT_COMMITTER_NAME: GitHub
  GIT_COMMITTER_EMAIL: actions@github.com
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  #BRANCH_NAME: msw-update-${{ github.run_id }}

jobs:
  update_msw_worker:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
      - uses: actions/checkout@v4

      - name: Check Last 5 Commits for [dependabot skip]
        id: check-commits
        run: |
          # if has [dependabot skip] then skip workflow
          if git log -5 --pretty=format:"%h - %an: %s" | grep -x ".*dependabot skip.*"; then
            exit 0
          fi

      # - name: Authenticate with PAT
      #   env:
      #     PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      #   run: |
      #     echo $PAT_TOKEN | gh auth login --with-token
      - name: Set up node
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install node_modules
        if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          npm ci


      - name: Regenerate mockServiceWorker.js
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          git config pull.rebase false
          git pull origin ${{ github.event.pull_request.head.ref }} --allow-unrelated-histories
          git checkout ${{ github.event.pull_request.head.ref }}
          npx msw init public/ --save
      - name: Check for changes in mockServiceWorker.js
        if: ${{ contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
        run: |
          if [[ $(git status --porcelain) ]]; then
            git status --porcelain
            git add public/mockServiceWorker.js
            git commit --no-verify -m "[dependabot skip] Automatically updatiing mockServiceWorker.js file after 'msw' update in package.json"
            git push origin ${{ github.event.pull_request.head.ref }}
          else
            echo "No changes in mockServiceWorker.js"
          fi



      # - name: Regenerate mockServiceWorker.js
      #   if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
      #   run: |
      #     git status --porcelain
      #     git config pull.rebase false
      #     git pull origin master --allow-unrelated-histories
          
      #     git status --porcelain
      #     git branch -r

      #     git checkout master
      #     git checkout -b MSW-1

      #     git stash
      #     npm i -D msw@latest

      #     echo "Current branch is: $(git rev-parse --abbrev-ref HEAD)"
          
      #     npx msw init public/ --save
      # - name: Check for changes in mockServiceWorker.js
      #   if: ${{contains(steps.dependabot-metadata.outputs.dependency-names, 'msw') }}
      #   run: |
      #     if [[ $(git status --porcelain) ]]; then
      #       git status --porcelain

      #       git add .
      #       git commit -m "ROM - blabla"

      #     else
      #       echo "No changes in mockServiceWorker.js"
      #     fi

      # - name: Push new branch
      #   run: |
      #     git push --force-with-lease origin MSW-1

      # - name: Create new pull request
      #   env:
      #     GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh pr create --base master --head MSW-1 --title 'MSW update' --body 'Created via CI/CD'