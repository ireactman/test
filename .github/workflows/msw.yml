name: msw

on:  
  pull_request:
    branches:
      - dependabot/**

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: ${{ secrets.PAT_TOKEN }}
  GIT_AUTHOR_NAME: ${{ github.actor }}
  GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
  GIT_COMMITTER_NAME: GitHub
  GIT_COMMITTER_EMAIL: actions@github.com
  # BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  #BRANCH_NAME: msw-update-${{ github.run_id }}

jobs:
  update_msw_worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}     

      - name: Authenticate with PAT
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo $PAT_TOKEN | gh auth login --with-token

      - name: Set up node
        if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Install node_modules
        if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
        run: |
          npm i
          echo "--------------"
          git status
          echo "--------------"


      - name: Regenerate mockServiceWorker.js
        if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
        run: |
          # git config --global user.name "ireactman"
          # gin config --global user.email "ireactman@gmail.com"

          # git fetch origin
          # git checkout -f master

          # git checkout -b ROM-999

          # npm run b
          npx msw init public/ --save

      - name: Check for changes in mockServiceWorker.js
        if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
        run: |
          if [[ $(git status --porcelain) ]]; then
            git status --porcelain
            git .
            git commit --no-verify -m "[dependabot skip] Automatically updatiing mockServiceWorker.js file after 'msw' update in package.json"
            git push
          else
            echo "No changes in mockServiceWorker.js"
          fi
      - name: Change title of PR
        if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          PR_NUMBER=$(gh pr list --head ROM-999 --json number -q '.[0].number')
          CURRENT_TITLE=$(gh pr view "$PR_NUMBER" --json title -q '.title')
          NEW_TITLE="MSW_UPDATE: $CURRENT_TITLE"
          gh pr edit "$PR_NUMBER" --title "$NEW_TITLE"

      # - name: Create new pull request
      #   if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
      #   env:
      #     GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh pr create --base master --head ROM-999 --title 'MSW update' --body 'Created via CI/CD'



      # - name: Regenerate mockServiceWorker.js
      #   if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
      #   run: |
      #     git status --porcelain
      #     git config pull.rebase false
      #     git pull origin master --allow-unrelated-histories
          
      #     git status --porcelain
      #     git branch -r

      #     git checkout master
      #     git checkout -b MSW-1

      #     git stash
      #     npm i -D msw@latest

      #     echo "Current branch is: $(git rev-parse --abbrev-ref HEAD)"
          
      #     npx msw init public/ --save
      # - name: Check for changes in mockServiceWorker.js
      #   if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
      #   run: |
      #     if [[ $(git status --porcelain) ]]; then
      #       git status --porcelain

      #       git add .
      #       git commit -m "ROM - blabla"

      #     else
      #       echo "No changes in mockServiceWorker.js"
      #     fi

      # - name: Push new branch
      #   if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
      #   run: |
      #     git push --force-with-lease origin MSW-1

      # - name: Create new pull request
      #   if: ${{!contains(github.event.pull_request.title, 'MSW_UPDATE') && contains(github.event.pull_request.title, 'msw')}}
      #   env:
      #     GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh pr create --base master --head MSW-1 --title 'MSW update' --body 'Created via CI/CD'